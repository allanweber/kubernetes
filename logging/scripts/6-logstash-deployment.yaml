apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-configmap
  namespace: kube-logging
data:
  logstash.yml: |
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
  logstash.conf: |
    input {
    tcp {
        port => 5000
        codec => "json"
    }
    }

    filter {
        date {
            match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss.SSS" ]
        }
    }

    output {
        stdout {
            codec => rubydebug
        }
        elasticsearch {
            hosts => ["elasticsearch:9200"]
            index => "micro-%{service}"
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: kube-logging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
        - name: logstash
          image: docker.elastic.co/logstash/logstash:7.2.0
          resources:
            limits:
              cpu: 500m
            requests:
              cpu: 100m
          ports:
            - containerPort: 5000
          volumeMounts:
            - name: config-volume
              mountPath: /usr/share/logstash/config
            - name: logstash-pipeline-volume
              mountPath: /usr/share/logstash/pipeline
          env:
            - name: ES_JAVA_OPTS
              value: "-Xmx256m -Xms256m"
      volumes:
        - name: config-volume
          configMap:
            name: logstash-configmap
            items:
              - key: logstash.yml
                path: logstash.yml
        - name: logstash-pipeline-volume
          configMap:
            name: logstash-configmap
            items:
              - key: logstash.conf
                path: logstash.conf
---
kind: Service
apiVersion: v1
metadata:
  name: logstash
  namespace: kube-logging
  labels:
    app: logstash
spec:
  selector:
    app: logstash
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: ClusterIP
